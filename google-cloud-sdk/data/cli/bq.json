{
  "CLI_VERSION": "2.0.40",
  "VERSION": "1",
  "capsule": "",
  "commands": {
    "cancel": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "cancel"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Request a cancel and waits for the job to be cancelled.\n\nRequests a cancel and then either: a) waits until the job is done if\nthe sync flag is set [default], or b) returns immediately if the sync\nflag is not set. Not all job types support a cancel, an error is\nreturned if it cannot be cancelled. Even for jobs that support a\ncancel, success is not guaranteed, the job may have completed by the\ntime the cancel request is noticed, or the job may be in a stage\nwhere it cannot be cancelled.\n",
        "EXAMPLES": "bq cancel job_id # Requests a cancel and waits until the job is done.\nbq --nosync cancel job_id # Requests a cancel and returns\nimmediately.\n"
      }
    },
    "cp": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "cp"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Copies one table to another.\n",
        "EXAMPLES": "bq cp dataset.old_table dataset2.new_table\nbq cp --destination_kms_key=kms_key dataset.old_table\ndataset2.new_table\n"
      }
    },
    "extract": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "extract"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Perform an extract operation of source_table into destination_uris.\n\nUsage:\nextract <source_table> <destination_uris>\n",
        "EXAMPLES": "bq extract ds.summary gs://mybucket/summary.csv\n"
      }
    },
    "head": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "head"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Displays rows in a table.\n",
        "EXAMPLES": "bq head dataset.table\nbq head -j job\nbq head -n 10 dataset.table\nbq head -s 5 -n 10 dataset.table\n"
      }
    },
    "help": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "help"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Help for all or selected command:\nbq_main help [<command>]\n\nTo retrieve help with global flags:\nbq_main --help\n\nTo retrieve help with flags only from the main module:\nbq_main --helpshort [<command>]\n"
      }
    },
    "init": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "init"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Authenticate and create a default .bigqueryrc file.\n"
      }
    },
    "insert": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "insert"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Inserts rows in a table.\n\nInserts the records formatted as newline delimited JSON from file\ninto the specified table. If file is not specified, reads from stdin.\nIf there were any insert errors it prints the errors to stdout.\n",
        "EXAMPLES": "bq insert dataset.table /tmp/mydata.json\necho '{\"a\":1, \"b\":2}' | bq insert dataset.table\n\nTemplate table examples: Insert to dataset.template_suffix table\nusing dataset.template table as its template.\nbq insert -x=_suffix dataset.table /tmp/mydata.json\n"
      }
    },
    "load": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "load"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Perform a load operation of source into destination_table.\n\nUsage:\nload <destination_table> <source> [<schema>]\n\nThe <destination_table> is the fully-qualified table name of table to\ncreate, or append to if the table already exists.\n\nThe <source> argument can be a path to a single local file, or a\ncomma-separated list of URIs.\n\nThe <schema> argument should be either the name of a JSON file or a\ntext schema. This schema should be omitted if the table already has\none.\n\nIn the case that the schema is provided in text form, it should be a\ncomma-separated list of entries of the form name[:type], where type\nwill default to string if not specified.\n\nIn the case that <schema> is a filename, it should contain a single\narray object, each entry of which should be an object with properties\n'name', 'type', and (optionally) 'mode'. See the online documentation\nfor more detail:\nhttps://developers.google.com/bigquery/preparing-data-for-bigquery\n\nNote: the case of a single-entry schema with no type specified is\nambiguous; one can use name:string to force interpretation as a\ntext schema.\n",
        "EXAMPLES": "bq load ds.new_tbl ./info.csv ./info_schema.json\nbq load ds.new_tbl gs://mybucket/info.csv ./info_schema.json\nbq load ds.small gs://mybucket/small.csv name:integer,value:string\nbq load ds.small gs://mybucket/small.csv field1,field2,field3\n"
      }
    },
    "ls": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "ls"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "List the objects contained in the named collection.\n\nList the objects in the named project or dataset. A trailing : or .\ncan be used to signify a project or dataset.\n* With -j, show the jobs in the named project.\n* With -p, show all projects.\n",
        "EXAMPLES": "bq ls\nbq ls -j proj\nbq ls -p -n 1000\nbq ls mydataset\nbq ls -a\nbq ls --filter labels.color:red\nbq ls --filter 'labels.color:red labels.size:*'\nbq ls --transfer_config --transfer_location='us'\n--filter='dataSourceIds:play,adwords'\nbq ls --transfer_run --filter='states:SUCCESSED,PENDING'\n--run_attempt='LATEST' projects/p/locations/l/transferConfigs/c\nbq ls --transfer_log --message_type='messageTypes:INFO,ERROR'\nprojects/p/locations/l/transferConfigs/c/runs/r\nbq ls --reservation_grant --project_id=proj --location='us'\nbq ls --reservation_grant --project_id=proj --location='us'\n--reservation\n<reservation_ref>\n"
      }
    },
    "mk": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "mk"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Create a dataset, table, view, or transfer configuration with this\nname.\n\nSee 'bq help load' for more information on specifying the schema.\n",
        "EXAMPLES": "bq mk new_dataset\nbq mk new_dataset.new_table\nbq --dataset_id=new_dataset mk table\nbq mk -t new_dataset.newtable name:integer,value:string\nbq mk --view='select 1 as num' new_dataset.newview\n(--view_udf_resource=path/to/file.js)\nbq mk --materialized_view='select sum(x) as sum_x from dataset.table'\nnew_dataset.newview\nbq mk -d --data_location=EU new_dataset\nbq mk --transfer_config --target_dataset=dataset --display_name=name\n-p='{\"param\":\"value\"}' --data_source=source\nbq mk --transfer_run --start_time={start_time} --end_time={end_time}\nprojects/p/locations/l/transferConfigs/c\nbq mk ---reservation_grant -project_id=proj --location=us\n--reservation_id=project:us.dev --job_type=QUERY\n"
      }
    },
    "mkdef": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "mkdef"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Emits a definition in JSON for a GCS backed table.\n\nThe output of this command can be redirected to a file and used for\nthe external_table_definition flag with the \"bq query\" and \"bq mk\"\ncommands. It produces a definition with the most commonly used values\nfor options. You can modify the output to override option values.\n\nUsage:\nmkdef <source_uris> [<schema>]\n",
        "EXAMPLES": "bq mkdef 'gs://bucket/file.csv' field1:integer,field2:string\n"
      }
    },
    "partition": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "partition"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Copies source tables into partitioned tables.\n\nUsage: bq partition <source_table_prefix>\n<destination_partitioned_table>\n\nCopies tables of the format <source_table_prefix><YYYYmmdd> to a\ndestination partitioned table, with the date suffix of the source\ntables becoming the partition date of the destination table\npartitions.\n\nIf the destination table does not exist, one will be created with a\nschema and that matches the last table that matches the supplied\nprefix.\n",
        "EXAMPLES": "bq partition dataset1.sharded_ dataset2.partitioned_table\n"
      }
    },
    "query": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "query"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Execute a query.\n\nQuery should be specifed on command line, or passed on stdin.\n",
        "EXAMPLES": "bq query 'select count(*) from publicdata:samples.shakespeare'\necho 'select count(*) from publicdata:samples.shakespeare' | bq query\n\nUsage:\nquery [<sql_query>]\n"
      }
    },
    "rm": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "rm"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Delete the dataset, table, or transfer config described by\nidentifier.\n\nAlways requires an identifier, unlike the show and ls commands. By\ndefault, also requires confirmation before deleting. Supports the -d\n-t flags to signify that the identifier is a dataset or table.\n* With -f, don't ask for confirmation before deleting.\n* With -r, remove all tables in the named dataset.\n",
        "EXAMPLES": "bq rm ds.table\nbq rm -r -f old_dataset\nbq rm --transfer_config=projects/p/locations/l/transferConfigs/c\nbq rm --reservation_grant --project_id=proj --location=us\nquery_proj_dev\n"
      }
    },
    "shell": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "shell"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Start an interactive bq session.\n"
      }
    },
    "show": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "show"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Show all information about an object.\n",
        "EXAMPLES": "bq show -j <job_id>\nbq show dataset\nbq show [--schema] dataset.table\nbq show [--view] dataset.view\nbq show [--materialized_view] dataset.materialized_view\nbq show --transfer_config projects/p/locations/l/transferConfigs/c\nbq show --transfer_run\nprojects/p/locations/l/transferConfigs/c/runs/r\nbq show --encryption_service_account\n"
      }
    },
    "update": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "update"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Updates a dataset, table, view or transfer configuration with this\nname.\n\nSee 'bq help load' for more information on specifying the schema.\n",
        "EXAMPLES": "bq update --description \"Dataset description\" existing_dataset\nbq update --description \"My table\" existing_dataset.existing_table\nbq update -t existing_dataset.existing_table\nname:integer,value:string\nbq update --destination_kms_key\nprojects/p/locations/l/keyRings/r/cryptoKeys/k\nexisting_dataset.existing_table\nbq update --view='select 1 as num' existing_dataset.existing_view\n(--view_udf_resource=path/to/file.js)\nbq update --transfer_config --display_name=name\n-p='{\"param\":\"value\"}'\nprojects/p/locations/l/transferConfigs/c\nbq update --transfer_config --target_dataset=dataset\n--refresh_window_days=5 --update_credentials\nprojects/p/locations/l/transferConfigs/c\nbq update --reservation --location=US --project_id=my-project\n--reservation_size=2000000000\n"
      }
    },
    "version": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "version"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Return the version of bq.\n"
      }
    },
    "wait": {
      "capsule": "",
      "commands": {},
      "flags": {},
      "groups": {},
      "is_group": false,
      "is_hidden": false,
      "path": [
        "bq",
        "wait"
      ],
      "positionals": [],
      "release": "GA",
      "sections": {
        "DESCRIPTION": "Wait some number of seconds for a job to finish.\n\nPoll job_id until either (1) the job is DONE or (2) the specified\nnumber of seconds have elapsed. Waits forever if unspecified. If no\njob_id is specified, and there is only one running job, we poll that\njob.\n",
        "EXAMPLES": "bq wait # Waits forever for the currently running job.\nbq wait job_id # Waits forever\nbq wait job_id 100 # Waits 100 seconds\nbq wait job_id 0 # Polls if a job is done, then returns immediately.\n# These may exit with a non-zero status code to indicate \"failure\":\nbq wait --fail_on_error job_id # Succeeds if job succeeds.\nbq wait --fail_on_error job_id 100 # Succeeds if job succeeds in 100\nsec.\n"
      }
    }
  },
  "flags": {
    "--api": {
      "attr": {},
      "category": "",
      "default": "'https://www.googleapis.com'",
      "description": "API endpoint to talk to.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--api",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--api_version": {
      "attr": {},
      "category": "",
      "default": "'v2'",
      "description": "API version to use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--api_version",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--apilog": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Log all API requests and responses to the file specified by this flag. Also accepts \"stdout\" and \"stderr\". Specifying the empty string will direct to stdout.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--apilog",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--application_default_credential_file": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--application_default_credential_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--bigqueryrc": {
      "attr": {},
      "category": "",
      "default": "'/user/forge-00/.bigqueryrc'",
      "description": "Path to configuration file. The configuration file specifies new defaults for any flags, and can be overrridden by specifying the flag on the command line. If the --bigqueryrc flag is not specified, the BIGQUERYRC environment variable is used. If that is not specified, the path \"~/.bigqueryrc\" is used.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--bigqueryrc",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--ca_certificates_file": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Location of CA certificates file.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--ca_certificates_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--credential_file": {
      "attr": {},
      "category": "",
      "default": "'/user/forge-00/.bigquery.v2.token'",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--credential_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--dataset_id": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Default dataset reference to use for requests (Ignored when not applicable.). Can be set as \"project:dataset\" or \"dataset\". If project is missing, the value of the project_id flag will be used.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--dataset_id",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--debug_mode": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Show tracebacks on Python exceptions.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--debug_mode",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--disable_ssl_validation": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Disables HTTPS certificates validation. This is off by default.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--disable_ssl_validation",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--discovery_file": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Filename for JSON document to read for discovery.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--discovery_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--enable_gdrive": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "When set to true, requests new OAuth token with GDrive scope. When set to false, requests new OAuth token without GDrive scope.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--enable_gdrive",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--fingerprint_job_id": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Whether to use a job id that is derived from a fingerprint of the job configuration. This will prevent the same job from running multiple times accidentally.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--fingerprint_job_id",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--flagfile": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Insert flag definitions from the given file into the command line.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--flagfile",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--format": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "<none|json|prettyjson|csv|sparse|pretty>: Format for command output. Options include: pretty: formatted table output sparse: simpler table output prettyjson: easy-to-read JSON format json: maximally compact JSON csv: csv format with header The first three are intended to be human-readable, and the latter three are for passing to another program. If no format is selected, one will be chosen based on the command run.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--format",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--headless": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Whether this bq session is running without user interaction. This affects behavior that expects user interaction, like whether debug_mode will break into the debugger and lowers the frequency of informational printing.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--headless",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--helpshort": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "show usage only for this module",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--helpshort",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--helpxml": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "like --help, but generates XML output",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--helpxml",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--httplib2_debuglevel": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Instruct httplib2 to print debugging messages by setting debuglevel to the given value.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--httplib2_debuglevel",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--job_id": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "A unique job_id to use for the request. If not specified, this client will generate a job_id. Applies only to commands that launch jobs, such as cp, extract, load, and query.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--job_id",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--job_property": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Additional key-value pairs to include in the properties field of the job configuration; repeat this option to specify a list of values",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--job_property",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--location": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Default geographic location to use when creating datasets or determining where jobs should run (Ignored when not applicable.)",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--location",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--max_rows_per_request": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Specifies the max number of rows to return per read. (an integer)",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--max_rows_per_request",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--project_id": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Default project to use for requests.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--project_id",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--proxy_address": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "The name or IP address of the proxy host to use for connecting to GCP.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--proxy_address",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--proxy_password": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "The password to use when authenticating with proxy host.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--proxy_password",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--proxy_port": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "The port number to use to connect to the proxy host.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--proxy_port",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--proxy_username": {
      "attr": {},
      "category": "",
      "default": "'true'",
      "description": "The user name to use when authenticating with proxy host. -q,--[no]quiet: If True, ignore status updates while jobs are running. -sync,--[no]synchronous_mode: If True, wait for command completion before returning, and use the job completion status for error codes. If False, simply create the job, and use the success of job creation as the error code.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--proxy_username",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--run_with_pdb": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Set to true for PDB debug mode",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--run_with_pdb",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--run_with_profiling": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Set to true for profiling the script. Execution will be slower, and the output format might change over time.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--run_with_profiling",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--service_account": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--service_account",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--service_account_credential_file": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--service_account_credential_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--service_account_private_key_file": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--service_account_private_key_file",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--service_account_private_key_password": {
      "attr": {},
      "category": "",
      "default": "'notasecret'",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--service_account_private_key_password",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--show_build_data": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "show build data and exit",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--show_build_data",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--trace": {
      "attr": {},
      "category": "",
      "default": "",
      "description": "A tracing token of the form \"token:<token>\" to include in api requests. -?,--[no]help: show this help",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--trace",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--undefok": {
      "attr": {},
      "category": "",
      "default": "''",
      "description": "comma-separated list of flag names that it is okay to specify on the command line even if the program does not define a flag with that name. IMPORTANT: flags in this list that have arguments MUST use the --flag=value format.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--undefok",
      "nargs": "1",
      "type": "string",
      "value": "VALUE"
    },
    "--use_cprofile_for_profiling": {
      "attr": {},
      "category": "",
      "default": "'true'",
      "description": "Use cProfile instead of the profile module for profiling. This has no effect unless --run_with_profiling is set.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--use_cprofile_for_profiling",
      "nargs": "0",
      "type": "bool",
      "value": ""
    },
    "--use_gce_service_account": {
      "attr": {},
      "category": "",
      "default": "'false'",
      "description": "Only for the gcloud wrapper use.",
      "group": "",
      "is_global": true,
      "is_hidden": false,
      "is_required": false,
      "name": "--use_gce_service_account",
      "nargs": "0",
      "type": "bool",
      "value": ""
    }
  },
  "groups": {},
  "is_group": true,
  "is_hidden": false,
  "path": [
    "bq"
  ],
  "positionals": [],
  "release": "GA",
  "sections": {}
}
