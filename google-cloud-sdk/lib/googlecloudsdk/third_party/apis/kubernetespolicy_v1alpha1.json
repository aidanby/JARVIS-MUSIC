{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "kubernetespolicy:v1alpha1",
  "name": "kubernetespolicy",
  "canonicalName": "KubernetesPolicy",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Kubernetes Policy",
  "description": "The Kubernetes Policy API provides hooks to synchronize policies between GCP and Kubernetes clusters enabling policy management for clusters through GCP.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/containers",
  "protocol": "rest",
  "rootUrl": "https://kubernetespolicy.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://kubernetespolicy.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Namespace": {
      "id": "Namespace",
      "description": "The Namespace represents a Kubernetes Managed Namespace definition in GCP\nthat will be manifested as a Kubernetes namespace in multiple Kubernetes\nclusters enrolled in the environment.",
      "type": "object",
      "properties": {
        "name": {
          "description": "A generated globally unique name for the namespace\nsuch as projects\/{project}\/namespaces\/{namespace}\n(the number will be the same as project number, but clients\nshould not rely on that fact)",
          "type": "string"
        },
        "organization": {
          "description": "Output only. The organization of the Namespace, in the format of\norganizations\/{organization_id}",
          "type": "string"
        },
        "kubernetesName": {
          "description": "A human friendly name, unique per environment, and consistent with\nthe restrictions for Kubernetes Names in\nhttps:\/\/kubernetes.io\/docs\/concepts\/overview\/working-with-objects\/names\/\n(e.g. \"my-workloads\") limited to 64 characters.\nThis will be the name of the namespace created in each of the clusters.",
          "type": "string"
        },
        "parent": {
          "description": "The parent node of the namespace in the Cloud Resource Manager hierarchy,\nwhich must be a project (e.g. projects\/{project})",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "ListNamespacesResponse": {
      "id": "ListNamespacesResponse",
      "description": "Response for the ListNamespace method.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "The list of namespaces in the response",
          "type": "array",
          "items": {
            "$ref": "Namespace"
          }
        },
        "nextPageToken": {
          "description": "Next page token for pagination, currently only one namespace\ncan be in a project so this will be unused.",
          "type": "string"
        }
      }
    },
    "ClusterPolicy": {
      "id": "ClusterPolicy",
      "description": "ClusterPolicy is the top-level object for the policy node data definition.\n\nIt holds a policy defined for a single org unit (namespace).\n+protobuf=true",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "The actual object definition, per K8S object definition style.\n+optional",
          "$ref": "ClusterPolicySpec"
        }
      }
    },
    "ObjectMeta": {
      "id": "ObjectMeta",
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names\n+optional",
          "type": "string"
        },
        "generateName": {
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#idempotency\n+optional",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/namespaces\n+optional",
          "type": "string"
        },
        "selfLink": {
          "description": "SelfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string"
        },
        "uid": {
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids\n+optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string"
        },
        "generation": {
          "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
          "type": "string",
          "format": "int64"
        },
        "creationTimestamp": {
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata\n+optional",
          "$ref": "Time"
        },
        "deletionTimestamp": {
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata\n+optional",
          "$ref": "Time"
        },
        "deletionGracePeriodSeconds": {
          "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
          "type": "string",
          "format": "int64"
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/labels\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ownerReferences": {
          "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "OwnerReference"
          }
        },
        "initializers": {
          "description": "An initializer is a controller which enforces some system invariant at object creation time.\nThis field is a list of initializers that have not yet acted on this object. If nil or empty,\nthis object has been completely initialized. Otherwise, the object is considered uninitialized\nand is hidden (in list\/watch and get calls) from clients that haven't explicitly asked to\nobserve uninitialized objects.\n\nWhen an object is created, the system will populate this list with the current set of initializers.\nOnly privileged users may set or modify this list. Once it is empty, it may not be modified further\nby any user.",
          "$ref": "Initializers"
        },
        "finalizers": {
          "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\n+optional\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "The name of the cluster which the object belongs to.\nThis is used to distinguish resources with same name and namespace in different clusters.\nThis field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.\n+optional",
          "type": "string"
        }
      }
    },
    "Time": {
      "id": "Time",
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false",
      "type": "object",
      "properties": {
        "seconds": {
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "OwnerReference": {
      "id": "OwnerReference",
      "description": "OwnerReference contains enough information to let you identify an owning\nobject. Currently, an owning object must be in the same namespace, so there\nis no namespace field.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent.\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller.\n+optional",
          "type": "boolean"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
          "type": "boolean"
        }
      }
    },
    "Initializers": {
      "id": "Initializers",
      "description": "Initializers tracks the progress of initialization.",
      "type": "object",
      "properties": {
        "pending": {
          "description": "Pending is a list of initializers that must execute in order before this object is visible.\nWhen the last pending initializer is removed, and no failing result is set, the initializers\nstruct will be set to nil and the object is considered as initialized and visible to all\nclients.\n+patchMergeKey=name\n+patchStrategy=merge",
          "type": "array",
          "items": {
            "$ref": "Initializer"
          }
        },
        "result": {
          "description": "If result is set with the Failure field, the object will be persisted to storage and then deleted,\nensuring that other clients can observe the deletion.",
          "$ref": "Status"
        }
      }
    },
    "Initializer": {
      "id": "Initializer",
      "description": "Initializer is information about an initializer that has not yet completed.",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the process that is responsible for initializing this object.",
          "type": "string"
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "Status is a return value for calls that don't return other objects.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard list metadata.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds\n+optional",
          "$ref": "ListMeta"
        },
        "status": {
          "description": "Status of the operation.\nOne of: \"Success\" or \"Failure\".\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#spec-and-status\n+optional",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the status of this operation.\n+optional",
          "type": "string"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the\n\"Failure\" status. If this value is empty there\nis no information available. A Reason clarifies an HTTP status\ncode but does not override it.\n+optional",
          "type": "string"
        },
        "details": {
          "description": "Extended data associated with the reason.  Each reason may define its\nown extended details. This field is optional and the data returned\nis not guaranteed to conform to any schema except that defined by\nthe reason type.\n+optional",
          "$ref": "StatusDetails"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set.\n+optional",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListMeta": {
      "id": "ListMeta",
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "selfLink is a URL representing this object.\nPopulated by the system.\nRead-only.\n+optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency\n+optional",
          "type": "string"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nlist may not be possible if the server configuration has changed or more than a few minutes have\npassed. The resourceVersion field returned when using this continue value will be identical to\nthe value in the first response.",
          "type": "string"
        }
      }
    },
    "StatusDetails": {
      "id": "StatusDetails",
      "description": "StatusDetails is a set of additional properties that MAY be set by the\nserver to provide additional information about a response. The Reason\nfield of a Status object defines what attributes will be set. Clients\nmust ignore fields that do not match the defined type of each attribute,\nand should assume that any attribute may be empty, invalid, or under\ndefined.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason\n(when there is a single name which can be described).\n+optional",
          "type": "string"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason.\n+optional",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason.\nOn some operations may differ from the requested resource Kind.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds\n+optional",
          "type": "string"
        },
        "uid": {
          "description": "UID of the resource.\n(when there is a single resource which can be described).\nMore info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids\n+optional",
          "type": "string"
        },
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason\nfailure. Not all StatusReasons may provide detailed causes.\n+optional",
          "type": "array",
          "items": {
            "$ref": "StatusCause"
          }
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate\nthe client must take an alternate action - for those errors this field may indicate how long to wait\nbefore taking the alternate action.\n+optional",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "StatusCause": {
      "id": "StatusCause",
      "description": "StatusCause provides more information about an api.Status failure, including\ncases when multiple errors are encountered.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is\nempty there is no information available.\n+optional",
          "type": "string"
        },
        "message": {
          "description": "A human-readable description of the cause of the error.  This field may be\npresented as-is to a reader.\n+optional",
          "type": "string"
        },
        "field": {
          "description": "The field of the resource that has caused this error, as named by its JSON\nserialization. May include dot and postfix notation for nested attributes.\nArrays are zero-indexed.  Fields may appear more than once in an array of\ncauses due to fields having multiple errors.\nOptional.\n\nExamples:\n  \"name\" - the field \"name\" on the current resource\n  \"items[0].name\" - the field \"name\" on the first array entry in \"items\"\n+optional",
          "type": "string"
        }
      }
    },
    "ClusterPolicySpec": {
      "id": "ClusterPolicySpec",
      "description": "ClusterPolicySpec defines the policies that will exist at the cluster level.\n+protobuf=true",
      "type": "object",
      "properties": {
        "clusterRolesV1": {
          "description": "+optional",
          "type": "array",
          "items": {
            "$ref": "ClusterRole"
          }
        },
        "clusterRoleBindingsV1": {
          "description": "+optional",
          "type": "array",
          "items": {
            "$ref": "ClusterRoleBinding"
          }
        },
        "podSecurityPolicyV1Beta1": {
          "description": "+optional",
          "type": "array",
          "items": {
            "$ref": "PodSecurityPolicy"
          }
        }
      }
    },
    "ClusterRole": {
      "id": "ClusterRole",
      "description": "ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding or ClusterRoleBinding.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ObjectMeta"
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this ClusterRole",
          "type": "array",
          "items": {
            "$ref": "PolicyRule"
          }
        },
        "aggregationRule": {
          "description": "AggregationRule is an optional field that describes how to build the Rules for this ClusterRole.\nIf AggregationRule is set, then the Rules are controller managed and direct changes to Rules will be\nstomped by the controller.\n+optional",
          "$ref": "AggregationRule"
        }
      }
    },
    "PolicyRule": {
      "id": "PolicyRule",
      "description": "PolicyRule holds information that describes a policy rule, but does not contain information\nabout who the rule applies to or which namespace the rule applies to.",
      "type": "object",
      "properties": {
        "verbs": {
          "description": "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiGroups": {
          "description": "APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of\nthe enumerated resources in any API group will be allowed.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resources": {
          "description": "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceNames": {
          "description": "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nonResourceURLs": {
          "description": "NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path\nSince non-resource URLs are not namespaced, this field is only applicable for ClusterRoles referenced from a ClusterRoleBinding.\nRules can either apply to API resources (such as \"pods\" or \"secrets\") or non-resource URL paths (such as \"\/api\"),  but not both.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AggregationRule": {
      "id": "AggregationRule",
      "description": "AggregationRule describes how to locate ClusterRoles to aggregate into the ClusterRole",
      "type": "object",
      "properties": {
        "clusterRoleSelectors": {
          "description": "ClusterRoleSelectors holds a list of selectors which will be used to find ClusterRoles and create the rules.\nIf any of the selectors match, then the ClusterRole's permissions will be added\n+optional",
          "type": "array",
          "items": {
            "$ref": "LabelSelector"
          }
        }
      }
    },
    "LabelSelector": {
      "id": "LabelSelector",
      "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
      "type": "object",
      "properties": {
        "matchLabels": {
          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "matchExpressions": {
          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional",
          "type": "array",
          "items": {
            "$ref": "LabelSelectorRequirement"
          }
        }
      }
    },
    "LabelSelectorRequirement": {
      "id": "LabelSelectorRequirement",
      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
      "type": "object",
      "properties": {
        "key": {
          "description": "key is the label key that the selector applies to.\n+patchMergeKey=key\n+patchStrategy=merge",
          "type": "string"
        },
        "operator": {
          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
          "type": "string"
        },
        "values": {
          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ClusterRoleBinding": {
      "id": "ClusterRoleBinding",
      "description": "ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a ClusterRole in the global namespace,\nand adds who information via Subject.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ObjectMeta"
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "type": "array",
          "items": {
            "$ref": "Subject"
          }
        },
        "roleRef": {
          "description": "RoleRef can only reference a ClusterRole in the global namespace.\nIf the RoleRef cannot be resolved, the Authorizer must return an error.",
          "$ref": "RoleRef"
        }
      }
    },
    "Subject": {
      "id": "Subject",
      "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
          "type": "string"
        },
        "apiGroup": {
          "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.\n+optional",
          "type": "string"
        },
        "name": {
          "description": "Name of the object being referenced.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.\n+optional",
          "type": "string"
        }
      }
    },
    "RoleRef": {
      "id": "RoleRef",
      "description": "RoleRef contains information that points to the role being used",
      "type": "object",
      "properties": {
        "apiGroup": {
          "description": "APIGroup is the group for the resource being referenced",
          "type": "string"
        },
        "kind": {
          "description": "Kind is the type of resource being referenced",
          "type": "string"
        },
        "name": {
          "description": "Name is the name of resource being referenced",
          "type": "string"
        }
      }
    },
    "PodSecurityPolicy": {
      "id": "PodSecurityPolicy",
      "description": "Pod Security Policy governs the ability to make requests that affect the Security Context\nthat will be applied to a pod and container.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata\n+optional",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "spec defines the policy enforced.\n+optional",
          "$ref": "PodSecurityPolicySpec"
        }
      }
    },
    "PodSecurityPolicySpec": {
      "id": "PodSecurityPolicySpec",
      "description": "Pod Security Policy Spec defines the policy enforced.",
      "type": "object",
      "properties": {
        "privileged": {
          "description": "privileged determines if a pod can request to be run as privileged.\n+optional",
          "type": "boolean"
        },
        "defaultAddCapabilities": {
          "description": "DefaultAddCapabilities is the default set of capabilities that will be added to the container\nunless the pod spec specifically drops the capability.  You may not list a capability in both\nDefaultAddCapabilities and RequiredDropCapabilities. Capabilities added here are implicitly\nallowed, and need not be included in the AllowedCapabilities list.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requiredDropCapabilities": {
          "description": "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These\nare required to be dropped and cannot be added.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedCapabilities": {
          "description": "AllowedCapabilities is a list of capabilities that can be requested to add to the container.\nCapabilities in this field may be added at the pod author's discretion.\nYou must not list a capability in both AllowedCapabilities and RequiredDropCapabilities.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "volumes": {
          "description": "volumes is a white list of allowed volume plugins.  Empty indicates that all plugins\nmay be used.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "hostNetwork": {
          "description": "hostNetwork determines if the policy allows the use of HostNetwork in the pod spec.\n+optional",
          "type": "boolean"
        },
        "hostPorts": {
          "description": "hostPorts determines which host port ranges are allowed to be exposed.\n+optional",
          "type": "array",
          "items": {
            "$ref": "HostPortRange"
          }
        },
        "hostPID": {
          "description": "hostPID determines if the policy allows the use of HostPID in the pod spec.\n+optional",
          "type": "boolean"
        },
        "hostIPC": {
          "description": "hostIPC determines if the policy allows the use of HostIPC in the pod spec.\n+optional",
          "type": "boolean"
        },
        "seLinux": {
          "description": "seLinux is the strategy that will dictate the allowable labels that may be set.",
          "$ref": "SELinuxStrategyOptions"
        },
        "runAsUser": {
          "description": "runAsUser is the strategy that will dictate the allowable RunAsUser values that may be set.",
          "$ref": "RunAsUserStrategyOptions"
        },
        "supplementalGroups": {
          "description": "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.",
          "$ref": "SupplementalGroupsStrategyOptions"
        },
        "fsGroup": {
          "description": "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.",
          "$ref": "FSGroupStrategyOptions"
        },
        "readOnlyRootFilesystem": {
          "description": "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file\nsystem.  If the container specifically requests to run with a non-read only root file system\nthe PSP should deny the pod.\nIf set to false the container may run with a read only root file system if it wishes but it\nwill not be forced to.\n+optional",
          "type": "boolean"
        },
        "defaultAllowPrivilegeEscalation": {
          "description": "DefaultAllowPrivilegeEscalation controls the default setting for whether a\nprocess can gain more privileges than its parent process.\n+optional",
          "type": "boolean"
        },
        "allowPrivilegeEscalation": {
          "description": "AllowPrivilegeEscalation determines if a pod can request to allow\nprivilege escalation. If unspecified, defaults to true.\n+optional",
          "type": "boolean"
        },
        "allowedHostPaths": {
          "description": "is a white list of allowed host paths. Empty indicates that all host paths may be used.\n+optional",
          "type": "array",
          "items": {
            "$ref": "AllowedHostPath"
          }
        },
        "allowedFlexVolumes": {
          "description": "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all\nFlexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes\nis allowed in the \"Volumes\" field.\n+optional",
          "type": "array",
          "items": {
            "$ref": "AllowedFlexVolume"
          }
        }
      }
    },
    "HostPortRange": {
      "id": "HostPortRange",
      "description": "Host Port Range defines a range of host ports that will be enabled by a policy\nfor pods to use.  It requires both the start and end to be defined.",
      "type": "object",
      "properties": {
        "min": {
          "description": "min is the start of the range, inclusive.",
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "description": "max is the end of the range, inclusive.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SELinuxStrategyOptions": {
      "id": "SELinuxStrategyOptions",
      "description": "SELinux  Strategy Options defines the strategy type and any options used to create the strategy.",
      "type": "object",
      "properties": {
        "rule": {
          "description": "type is the strategy that will dictate the allowable labels that may be set.",
          "type": "string"
        },
        "seLinuxOptions": {
          "description": "seLinuxOptions required to run as; required for MustRunAs\nMore info: https:\/\/kubernetes.io\/docs\/tasks\/configure-pod-container\/security-context\/\n+optional",
          "$ref": "SELinuxOptions"
        }
      }
    },
    "SELinuxOptions": {
      "id": "SELinuxOptions",
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object",
      "properties": {
        "user": {
          "description": "User is a SELinux user label that applies to the container.\n+optional",
          "type": "string"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container.\n+optional",
          "type": "string"
        },
        "type": {
          "description": "Type is a SELinux type label that applies to the container.\n+optional",
          "type": "string"
        },
        "level": {
          "description": "Level is SELinux level label that applies to the container.\n+optional",
          "type": "string"
        }
      }
    },
    "RunAsUserStrategyOptions": {
      "id": "RunAsUserStrategyOptions",
      "description": "Run A sUser Strategy Options defines the strategy type and any options used to create the strategy.",
      "type": "object",
      "properties": {
        "rule": {
          "description": "Rule is the strategy that will dictate the allowable RunAsUser values that may be set.",
          "type": "string"
        },
        "ranges": {
          "description": "Ranges are the allowed ranges of uids that may be used.\n+optional",
          "type": "array",
          "items": {
            "$ref": "IDRange"
          }
        }
      }
    },
    "IDRange": {
      "id": "IDRange",
      "description": "ID Range provides a min\/max of an allowed range of IDs.",
      "type": "object",
      "properties": {
        "min": {
          "description": "Min is the start of the range, inclusive.",
          "type": "string",
          "format": "int64"
        },
        "max": {
          "description": "Max is the end of the range, inclusive.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SupplementalGroupsStrategyOptions": {
      "id": "SupplementalGroupsStrategyOptions",
      "description": "SupplementalGroupsStrategyOptions defines the strategy type and options used to create the strategy.",
      "type": "object",
      "properties": {
        "rule": {
          "description": "Rule is the strategy that will dictate what supplemental groups is used in the SecurityContext.\n+optional",
          "type": "string"
        },
        "ranges": {
          "description": "Ranges are the allowed ranges of supplemental groups.  If you would like to force a single\nsupplemental group then supply a single range with the same start and end.\n+optional",
          "type": "array",
          "items": {
            "$ref": "IDRange"
          }
        }
      }
    },
    "FSGroupStrategyOptions": {
      "id": "FSGroupStrategyOptions",
      "description": "FSGroupStrategyOptions defines the strategy type and options used to create the strategy.",
      "type": "object",
      "properties": {
        "rule": {
          "description": "Rule is the strategy that will dictate what FSGroup is used in the SecurityContext.\n+optional",
          "type": "string"
        },
        "ranges": {
          "description": "Ranges are the allowed ranges of fs groups.  If you would like to force a single\nfs group then supply a single range with the same start and end.\n+optional",
          "type": "array",
          "items": {
            "$ref": "IDRange"
          }
        }
      }
    },
    "AllowedHostPath": {
      "id": "AllowedHostPath",
      "description": "defines the host volume conditions that will be enabled by a policy\nfor pods to use. It requires the path prefix to be defined.",
      "type": "object",
      "properties": {
        "pathPrefix": {
          "description": "is the path prefix that the host volume must match.\nIt does not support `*`.\nTrailing slashes are trimmed when validating the path prefix with a host path.\n\nExamples:\n`\/foo` would allow `\/foo`, `\/foo\/` and `\/foo\/bar`\n`\/foo` would not allow `\/food` or `\/etc\/foo`",
          "type": "string"
        }
      }
    },
    "AllowedFlexVolume": {
      "id": "AllowedFlexVolume",
      "description": "AllowedFlexVolume represents a single Flexvolume that is allowed to be used.",
      "type": "object",
      "properties": {
        "driver": {
          "description": "Driver is the name of the Flexvolume driver.",
          "type": "string"
        }
      }
    },
    "ClusterPolicyList": {
      "id": "ClusterPolicyList",
      "description": "ClusterPolicyList holds a list of cluster level policies, returned as response to a List\ncall on the cluster policy hierarchy.\n+protobuf=true",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "Items is a list of policy nodes that apply.",
          "type": "array",
          "items": {
            "$ref": "ClusterPolicy"
          }
        }
      }
    },
    "PolicyNode": {
      "id": "PolicyNode",
      "description": "PolicyNode is the top-level object for the policy node data definition.\n\nIt holds a policy defined for a single org unit (namespace).\n+protobuf=true",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata. The Name field of the policy node must match the namespace name.\n+optional",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "The actual object definition, per K8S object definition style.\n+optional",
          "$ref": "PolicyNodeSpec"
        }
      }
    },
    "PolicyNodeSpec": {
      "id": "PolicyNodeSpec",
      "description": "PolicyNodeSpec contains all the information about a policy linkage.\n+protobuf=true",
      "type": "object",
      "properties": {
        "type": {
          "description": "The type of the PolicyNode.",
          "type": "string"
        },
        "parent": {
          "description": "The parent org unit\n+optional",
          "type": "string"
        },
        "rolesV1": {
          "description": "+optional",
          "type": "array",
          "items": {
            "$ref": "Role"
          }
        },
        "roleBindingsV1": {
          "description": "+optional",
          "type": "array",
          "items": {
            "$ref": "RoleBinding"
          }
        },
        "resourceQuotaV1": {
          "description": "+optional",
          "$ref": "ResourceQuota"
        }
      }
    },
    "Role": {
      "id": "Role",
      "description": "Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a RoleBinding.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ObjectMeta"
        },
        "rules": {
          "description": "Rules holds all the PolicyRules for this Role",
          "type": "array",
          "items": {
            "$ref": "PolicyRule"
          }
        }
      }
    },
    "RoleBinding": {
      "id": "RoleBinding",
      "description": "RoleBinding references a role, but does not contain it.  It can reference a Role in the same namespace or a ClusterRole in the global namespace.\nIt adds who information via Subjects and namespace information by which namespace it exists in.  RoleBindings in a given\nnamespace only have effect in that namespace.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ObjectMeta"
        },
        "subjects": {
          "description": "Subjects holds references to the objects the role applies to.",
          "type": "array",
          "items": {
            "$ref": "Subject"
          }
        },
        "roleRef": {
          "description": "RoleRef can reference a Role in the current namespace or a ClusterRole in the global namespace.\nIf the RoleRef cannot be resolved, the Authorizer must return an error.",
          "$ref": "RoleRef"
        }
      }
    },
    "ResourceQuota": {
      "id": "ResourceQuota",
      "description": "ResourceQuota sets aggregate quota restrictions enforced per namespace",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\nMore info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata\n+optional",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the desired quota.\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#spec-and-status\n+optional",
          "$ref": "ResourceQuotaSpec"
        },
        "status": {
          "description": "Status defines the actual enforced quota and its current usage.\nhttps:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#spec-and-status\n+optional",
          "$ref": "ResourceQuotaStatus"
        }
      }
    },
    "ResourceQuotaSpec": {
      "id": "ResourceQuotaSpec",
      "description": "ResourceQuotaSpec defines the desired hard limits to enforce for Quota.",
      "type": "object",
      "properties": {
        "hard": {
          "description": "Hard is the set of desired hard limits for each named resource.\nMore info: https:\/\/kubernetes.io\/docs\/concepts\/policy\/resource-quotas\/\n+optional",
          "type": "object",
          "additionalProperties": {
            "$ref": "Quantity"
          }
        },
        "scopes": {
          "description": "A collection of filters that must match each object tracked by a quota.\nIf not specified, the quota matches all objects.\n+optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Quantity": {
      "id": "Quantity",
      "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling\/unmarshaling in JSON and YAML,\nin addition to String() and Int64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http:\/\/physics.nist.gov\/cuu\/Units\/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent\/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNOTE: We reserve the right to amend this canonical format, perhaps to\n  allow 1.5 to be canonical.",
      "type": "object",
      "properties": {
        "string": {
          "type": "string"
        }
      }
    },
    "ResourceQuotaStatus": {
      "id": "ResourceQuotaStatus",
      "description": "ResourceQuotaStatus defines the enforced hard limits and observed use.",
      "type": "object",
      "properties": {
        "hard": {
          "description": "Hard is the set of enforced hard limits for each named resource.\nMore info: https:\/\/kubernetes.io\/docs\/concepts\/policy\/resource-quotas\/\n+optional",
          "type": "object",
          "additionalProperties": {
            "$ref": "Quantity"
          }
        },
        "used": {
          "description": "Used is the current observed total usage of the resource in the namespace.\n+optional",
          "type": "object",
          "additionalProperties": {
            "$ref": "Quantity"
          }
        }
      }
    },
    "PolicyNodeList": {
      "id": "PolicyNodeList",
      "description": "PolicyNodeList holds a list of namespace policies, as response to a List\ncall on the policy hierarchy API.\n+protobuf=true",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Standard object's metadata.\n+optional",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "Items is a list of policy nodes that apply.",
          "type": "array",
          "items": {
            "$ref": "PolicyNode"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "namespaces": {
          "methods": {
            "create": {
              "id": "kubernetespolicy.projects.namespaces.create",
              "path": "v1alpha1/{+parent}/namespaces",
              "flatPath": "v1alpha1/projects/{projectsId}/namespaces",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The parent node of the namespace in the Elysium hierarchy, which must\nbe a project (e.g. projects\/{project})",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Namespace"
              },
              "response": {
                "$ref": "Namespace"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a Kubernetes Policy Namespace with the provided properties\nReturns a created Namespace object with the generated name populated"
            },
            "get": {
              "id": "kubernetespolicy.projects.namespaces.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/namespaces/{namespacesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The globally unique one platform name for the namespace such\nas projects\/{project}\/namespaces\/{namespace}",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/namespaces\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Namespace"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Retrieves a Kubernetes Policy Namespace given a One Platform namespace name\nsuch as projects\/{project}\/namespaces\/{namespace}"
            },
            "delete": {
              "id": "kubernetespolicy.projects.namespaces.delete",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/namespaces/{namespacesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The globally unique one platform name for the namespace such\nas projects\/{project}\/namespaces\/{namespace}",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/namespaces\/[^\/]+$",
                  "type": "string"
                },
                "validateOnly": {
                  "description": "If true the request will be validated but not executed.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a Kubernetes Policy Namespace given a One Platform namespace name\nsuch as projects\/{project}\/namespaces\/{namespace}\nDelete will hard delete the namespace immediately (no trash\/purge period)"
            },
            "list": {
              "id": "kubernetespolicy.projects.namespaces.list",
              "path": "v1alpha1/{+parent}/namespaces",
              "flatPath": "v1alpha1/projects/{projectsId}/namespaces",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The parent under which to list the namespaces, currently\nonly project id is supported",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Specifies the number of results to return per page. Only one namespace\nper project is available so this is parameter can be ignored.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Token returned from the previous response in next_page_token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListNamespacesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists the Kubernetes Policy Namespace given a Project Id using the format\nprojects\/{project}. Currently each project can have at most one namespace."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}