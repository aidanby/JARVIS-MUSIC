{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "sourcerepo:v1",
  "name": "sourcerepo",
  "canonicalName": "Cloud Source Repositories",
  "version": "v1",
  "revision": "0",
  "title": "Cloud Source Repositories API",
  "description": "Accesses source code repositories hosted by Google.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/source-repositories/docs/apis",
  "protocol": "rest",
  "rootUrl": "https://sourcerepo.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://sourcerepo.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/source.full_control": {
          "description": "Manage your source code repositories"
        },
        "https://www.googleapis.com/auth/source.read_only": {
          "description": "View the contents of your source code repositories"
        },
        "https://www.googleapis.com/auth/source.read_write": {
          "description": "Manage the contents of your source code repositories"
        }
      }
    }
  },
  "schemas": {
    "ProjectConfig": {
      "id": "ProjectConfig",
      "description": "Cloud Source Repositories configuration of a project.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the project. Values are of the form `projects\/<project>`.",
          "type": "string"
        },
        "pubsubConfigs": {
          "description": "How this project publishes a change in the repositories through Cloud\nPub\/Sub. Keyed by the topic names.",
          "type": "object",
          "additionalProperties": {
            "$ref": "PubsubConfig"
          }
        },
        "enablePrivateKeyCheck": {
          "description": "Reject a Git push that contains a private key.",
          "type": "boolean"
        }
      }
    },
    "PubsubConfig": {
      "id": "PubsubConfig",
      "description": "Configuration to publish a Cloud Pub\/Sub message.",
      "type": "object",
      "properties": {
        "topic": {
          "description": "A topic of Cloud Pub\/Sub. Values are of the form\n`projects\/<project>\/topics\/<topic>`. The project needs to be the same\nproject as this config is in.",
          "type": "string"
        },
        "messageFormat": {
          "description": "The format of the Cloud Pub\/Sub messages.",
          "enumDescriptions": [
            "Unspecified.",
            "The message payload is a serialized protocol buffer of SourceRepoEvent.",
            "The message payload is a JSON string of SourceRepoEvent."
          ],
          "type": "string",
          "enum": [
            "MESSAGE_FORMAT_UNSPECIFIED",
            "PROTOBUF",
            "JSON"
          ]
        },
        "serviceAccountEmail": {
          "description": "Email address of the service account used for publishing Cloud Pub\/Sub\nmessages. This service account needs to be in the same project as the\nPubsubConfig. When added, the caller needs to have\niam.serviceAccounts.actAs permission on this service account. If\nunspecified, it defaults to the compute engine default service account.",
          "type": "string"
        }
      }
    },
    "UpdateProjectConfigRequest": {
      "id": "UpdateProjectConfigRequest",
      "description": "Request for UpdateProjectConfig.",
      "type": "object",
      "properties": {
        "projectConfig": {
          "description": "The new configuration for the project.",
          "$ref": "ProjectConfig"
        },
        "updateMask": {
          "description": "A FieldMask specifying which fields of the project_config to modify. Only\nthe fields in the mask will be modified. If no mask is provided, this\nrequest is no-op.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "ListReposResponse": {
      "id": "ListReposResponse",
      "description": "Response for ListRepos.  The size is not set in the returned repositories.",
      "type": "object",
      "properties": {
        "repos": {
          "description": "The listed repos.",
          "type": "array",
          "items": {
            "$ref": "Repo"
          }
        },
        "nextPageToken": {
          "description": "If non-empty, additional repositories exist within the project. These\ncan be retrieved by including this value in the next ListReposRequest's\npage_token field.",
          "type": "string"
        }
      }
    },
    "Repo": {
      "id": "Repo",
      "description": "A repository (or repo) is a Git repository storing versioned source content.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name of the repository, of the form\n`projects\/<project>\/repos\/<repo>`.  The repo name may contain slashes.\neg, `projects\/myproject\/repos\/name\/with\/slash`",
          "type": "string"
        },
        "size": {
          "description": "The disk usage of the repo, in bytes. Read-only field. Size is only\nreturned by GetRepo.",
          "type": "string",
          "format": "int64"
        },
        "url": {
          "description": "URL to clone the repository from Google Cloud Source Repositories.\nRead-only field.",
          "type": "string"
        },
        "mirrorConfig": {
          "description": "How this repository mirrors a repository managed by another service.\nRead-only field.",
          "$ref": "MirrorConfig"
        },
        "pubsubConfigs": {
          "description": "How this repository publishes a change in the repository through Cloud\nPub\/Sub. Keyed by the topic names.",
          "type": "object",
          "additionalProperties": {
            "$ref": "PubsubConfig"
          }
        }
      }
    },
    "MirrorConfig": {
      "id": "MirrorConfig",
      "description": "Configuration to automatically mirror a repository from another\nhosting service, for example GitHub or Bitbucket.",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the main repository at the other hosting service.",
          "type": "string"
        },
        "webhookId": {
          "description": "ID of the webhook listening to updates to trigger mirroring.\nRemoving this webhook from the other hosting service will stop\nGoogle Cloud Source Repositories from receiving notifications,\nand thereby disabling mirroring.",
          "type": "string"
        },
        "deployKeyId": {
          "description": "ID of the SSH deploy key at the other hosting service.\nRemoving this key from the other service would deauthorize\nGoogle Cloud Source Repositories from mirroring.",
          "type": "string"
        }
      }
    },
    "UpdateRepoRequest": {
      "id": "UpdateRepoRequest",
      "description": "Request for UpdateRepo.",
      "type": "object",
      "properties": {
        "repo": {
          "description": "The new configuration for the repository.",
          "$ref": "Repo"
        },
        "updateMask": {
          "description": "A FieldMask specifying which fields of the repo to modify. Only the fields\nin the mask will be modified. If no mask is provided, this request is\nno-op.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` consists of a list of `bindings`. A `binding` binds a list of\n`members` to a `role`, where the members can be user accounts, Google groups,\nGoogle domains, and service accounts. A `role` is a named list of permissions\ndefined by IAM.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles\/owner\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-other-app@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles\/viewer\",\n          \"members\": [\"user:sean@example.com\"]\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-other-app@appspot.gserviceaccount.com\n      role: roles\/owner\n    - members:\n      - user:sean@example.com\n      role: roles\/viewer\n\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https:\/\/cloud.google.com\/iam\/docs).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Deprecated.",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`.\n`bindings` with no members will result in an error.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten blindly.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@gmail.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: A Google Apps domain name that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "Unimplemented. The condition that is associated with this binding.\nNOTE: an unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.",
          "type": "string"
        },
        "title": {
          "description": "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:foo@gmail.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"fooservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:bar@gmail.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor fooservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts foo@gmail.com from DATA_READ logging, and\nbar@gmail.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:foo@gmail.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\nfoo@gmail.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "methods": {
        "getConfig": {
          "id": "sourcerepo.projects.getConfig",
          "path": "v1/{+name}/config",
          "flatPath": "v1/projects/{projectsId}/config",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the requested project. Values are of the form\n`projects\/<project>`.",
              "location": "path",
              "required": true,
              "pattern": "^projects\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ProjectConfig"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Returns the Cloud Source Repositories configuration of the project."
        },
        "updateConfig": {
          "id": "sourcerepo.projects.updateConfig",
          "path": "v1/{+name}/config",
          "flatPath": "v1/projects/{projectsId}/config",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "The name of the requested project. Values are of the form\n`projects\/<project>`.",
              "location": "path",
              "required": true,
              "pattern": "^projects\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "UpdateProjectConfigRequest"
          },
          "response": {
            "$ref": "ProjectConfig"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the Cloud Source Repositories configuration of the project."
        }
      }
      ,
      "resources": {
        "repos": {
          "methods": {
            "list": {
              "id": "sourcerepo.projects.repos.list",
              "path": "v1/{+name}/repos",
              "flatPath": "v1/projects/{projectsId}/repos",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The project ID whose repos should be listed. Values are of the form\n`projects\/<project>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Maximum number of repositories to return; between 1 and 500.\nIf not set or zero, defaults to 100 at the server.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Resume listing repositories where a prior ListReposResponse\nleft off. This is an opaque token that must be obtained from\na recent, prior ListReposResponse's next_page_token field.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListReposResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control",
                "https://www.googleapis.com/auth/source.read_only",
                "https://www.googleapis.com/auth/source.read_write"
              ],
              "description": "Returns all repos belonging to a project. The sizes of the repos are\nnot set by ListRepos.  To get the size of a repo, use GetRepo."
            },
            "get": {
              "id": "sourcerepo.projects.repos.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the requested repository. Values are of the form\n`projects\/<project>\/repos\/<repo>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Repo"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control",
                "https://www.googleapis.com/auth/source.read_only",
                "https://www.googleapis.com/auth/source.read_write"
              ],
              "description": "Returns information about a repo."
            },
            "patch": {
              "id": "sourcerepo.projects.repos.patch",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The name of the requested repository. Values are of the form\n`projects\/<project>\/repos\/<repo>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "UpdateRepoRequest"
              },
              "response": {
                "$ref": "Repo"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates information about a repo."
            },
            "create": {
              "id": "sourcerepo.projects.repos.create",
              "path": "v1/{+parent}/repos",
              "flatPath": "v1/projects/{projectsId}/repos",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The project in which to create the repo. Values are of the form\n`projects\/<project>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Repo"
              },
              "response": {
                "$ref": "Repo"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control"
              ],
              "description": "Creates a repo in the given project with the given name.\n\nIf the named repository already exists, `CreateRepo` returns\n`ALREADY_EXISTS`."
            },
            "delete": {
              "id": "sourcerepo.projects.repos.delete",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the repo to delete. Values are of the form\n`projects\/<project>\/repos\/<repo>`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control"
              ],
              "description": "Deletes a repo."
            },
            "setIamPolicy": {
              "id": "sourcerepo.projects.repos.setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}:setIamPolicy",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control"
              ],
              "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy."
            },
            "getIamPolicy": {
              "id": "sourcerepo.projects.repos.getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}:getIamPolicy",
              "httpMethod": "GET",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control",
                "https://www.googleapis.com/auth/source.read_only",
                "https://www.googleapis.com/auth/source.read_write"
              ],
              "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."
            },
            "testIamPermissions": {
              "id": "sourcerepo.projects.repos.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "flatPath": "v1/projects/{projectsId}/repos/{reposId}:testIamPermissions",
              "httpMethod": "POST",
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/repos\/.+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "resource"
              ],
              "request": {
                "$ref": "TestIamPermissionsRequest"
              },
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/source.full_control",
                "https://www.googleapis.com/auth/source.read_only",
                "https://www.googleapis.com/auth/source.read_write"
              ],
              "description": "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}